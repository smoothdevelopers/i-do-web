<?php

use Illuminate\Support\Facades\Config;

// path to the error codes
$path = 'constants.validation.codes.';

return [
	'accepted'             => config($path.'not_accepted'),
	'active_url'           => config($path.'not_url'),
	'after'                => config($path.'not_after_date'),
	'after_or_equal'  		=> config($path.'not_after_or_equal_date'),
	'alpha'                => config($path.'not_letters'),
	'alpha_dash'           => config($path.'not_letters_numbers_dashes'),
	'alpha_num'            => config($path.'not_numeric'),
	'array'                => config($path.'not_array'),
	'before'               => config($path.'not_before_date'),
	'before_or_equal'      => config($path.'not_before_or_equal_date'),
	'between'              => [
		'numeric' => config($path.'not_between_numeric'),
		'file'    => config($path.'not_between_kilobytes'),
		'string'  => config($path.'not_between_length'),
		'array'   => config($path.'not_between_items_count'),
	],
	'boolean'              => config($path.'not_boolean'),
	'confirmed'            => config($path.'not_confirmed'),
	'date'                 => config($path.'not_date'),
	'date_format'          => config($path.'not_speficied_format'),
	'different'            => config($path.'not_different_from_other'),
	'digits'               => config($path.'not_digits'),
	'digits_between'       => config($path.'not_digits_between'),
	'dimensions'           => config($path.'not_valid_dimensions'),
	'distinct'             => config($path.'has_duplicate'),
	'email'                => config($path.'not_email'),
	'exists'               => config($path.'not_valid'),
	'file'                 => config($path.'not_file'),
	'filled'               => config($path.'not_nullable'),
	'image'                => config($path.'not_image'),
	'in'                   => config($path.'not_valid'),
	'in_array'             => config($path.'exist_in_specified'),
	'integer'              => config($path.'not_integer'),
	'ip'                   => config($path.'not_ip'),
	'json'                 => config($path.'not_json'),
	'max'                  => [
		'numeric' => config($path.'greater_value'),
		'file'    => config($path.'greater_kilobytes'),
		'string'  => config($path.'greater_length'),
		'array'   => config($path.'greater_count'),
	],
	'mimes'                => config($path.'not_file_type'),
	'mimetypes'            => config($path.'not_file_types'),
	'min'                  => [
		'numeric' => config($path.'lesser_value'),
		'file'    => config($path.'lesser_kilobytes'),
		'string'  => config($path.'lesser_length'),
		'array'   => config($path.'lesser_count'),
	],
	'not_in'               => config($path.'not_valid'),
	'numeric'              => config($path.'not_numeric'),
	'present'              => config($path.'not_present'),
	'regex'                => config($path.'not_valid'),
	'required'             => config($path.'required'),
	'required_if'          => config($path.'required_if_specified'),
	'required_unless'      => config($path.'required_unless_specified'),
	'required_with'        => config($path.'required_when_specified'),
	'required_with_all'    => config($path.'required_when_all_specified'),
	'required_without'     => config($path.'required_when_not_specified'),
	'required_without_all' => config($path.'required_when_all_not_specified'),
	'same'                 => config($path.'not_match_specified'),
	'size'                 => [
		'numeric' => config($path.'not_numeric_size'),
		'file'    => config($path.'not_kilobytes_size'),
		'string'  => config($path.'not_length_size'),
		'array'   => config($path.'not_array_size'),
	],
	'string'               => config($path.'not_string'),
	'timezone'             => config($path.'not_timezone'),
	'unique'               => config($path.'not_unique'),
	'uploaded'             => config($path.'upload_failed'),
	'url'                  => config($path.'not_valid'),
];
